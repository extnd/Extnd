Ext.data.JsonP.Ext_util_Observable({"parentMixins":[],"extends":null,"html":"<div><pre class=\"hierarchy\"><h4>Subclasses</h4><div class='dependency'><a href='#!/api/Ext.Component' rel='Ext.Component' class='docClass'>Ext.Component</a></div><div class='dependency'><a href='#!/api/Ext.History' rel='Ext.History' class='docClass'>Ext.History</a></div><div class='dependency'><a href='#!/api/Ext.Resizable' rel='Ext.Resizable' class='docClass'>Ext.Resizable</a></div><div class='dependency'><a href='#!/api/Ext.SplitBar' rel='Ext.SplitBar' class='docClass'>Ext.SplitBar</a></div><div class='dependency'><a href='#!/api/Ext.Updater' rel='Ext.Updater' class='docClass'>Ext.Updater</a></div><div class='dependency'><a href='#!/api/Ext.data.DataProxy' rel='Ext.data.DataProxy' class='docClass'>Ext.data.DataProxy</a></div><div class='dependency'><a href='#!/api/Ext.data.Node' rel='Ext.data.Node' class='docClass'>Ext.data.Node</a></div><div class='dependency'><a href='#!/api/Ext.data.Store' rel='Ext.data.Store' class='docClass'>Ext.data.Store</a></div><div class='dependency'><a href='#!/api/Ext.data.Tree' rel='Ext.data.Tree' class='docClass'>Ext.data.Tree</a></div><div class='dependency'><a href='#!/api/Ext.dd.DragTracker' rel='Ext.dd.DragTracker' class='docClass'>Ext.dd.DragTracker</a></div><div class='dependency'><a href='#!/api/Ext.form.BasicForm' rel='Ext.form.BasicForm' class='docClass'>Ext.form.BasicForm</a></div><div class='dependency'><a href='#!/api/Ext.grid.AbstractSelectionModel' rel='Ext.grid.AbstractSelectionModel' class='docClass'>Ext.grid.AbstractSelectionModel</a></div><div class='dependency'><a href='#!/api/Ext.grid.Column' rel='Ext.grid.Column' class='docClass'>Ext.grid.Column</a></div><div class='dependency'><a href='#!/api/Ext.grid.ColumnModel' rel='Ext.grid.ColumnModel' class='docClass'>Ext.grid.ColumnModel</a></div><div class='dependency'><a href='#!/api/Ext.grid.GridView' rel='Ext.grid.GridView' class='docClass'>Ext.grid.GridView</a></div><div class='dependency'><a href='#!/api/Ext.grid.PropertyStore' rel='Ext.grid.PropertyStore' class='docClass'>Ext.grid.PropertyStore</a></div><div class='dependency'><a href='#!/api/Ext.list.ColumnResizer' rel='Ext.list.ColumnResizer' class='docClass'>Ext.list.ColumnResizer</a></div><div class='dependency'><a href='#!/api/Ext.list.Sorter' rel='Ext.list.Sorter' class='docClass'>Ext.list.Sorter</a></div><div class='dependency'><a href='#!/api/Ext.state.Provider' rel='Ext.state.Provider' class='docClass'>Ext.state.Provider</a></div><div class='dependency'><a href='#!/api/Ext.tree.DefaultSelectionModel' rel='Ext.tree.DefaultSelectionModel' class='docClass'>Ext.tree.DefaultSelectionModel</a></div><div class='dependency'><a href='#!/api/Ext.tree.MultiSelectionModel' rel='Ext.tree.MultiSelectionModel' class='docClass'>Ext.tree.MultiSelectionModel</a></div><div class='dependency'><a href='#!/api/Ext.tree.TreeLoader' rel='Ext.tree.TreeLoader' class='docClass'>Ext.tree.TreeLoader</a></div><div class='dependency'><a href='#!/api/Ext.util.ClickRepeater' rel='Ext.util.ClickRepeater' class='docClass'>Ext.util.ClickRepeater</a></div><div class='dependency'><a href='#!/api/Ext.util.MixedCollection' rel='Ext.util.MixedCollection' class='docClass'>Ext.util.MixedCollection</a></div><h4>Files</h4><div class='dependency'><a href='source/Observable-more.html#Ext-util-Observable' target='_blank'>Observable-more.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-enableBubble' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Observable'>Ext.util.Observable</span><br/><a href='source/Observable-more.html#Ext-util-Observable-method-enableBubble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-enableBubble' class='name expandable'>enableBubble</a>( <span class='pre'>events</span> )</div><div class='description'><div class='short'>Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubbleTarget() if present. ...</div><div class='long'><p>Enables events fired by this Observable to bubble up an owner hierarchy by calling\n<code>this.getBubbleTarget()</code> if present. There is no implementation in the Observable base class.</p>\n\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers. See Ext.Component.getBubbleTarget. The default\nimplementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the Component's immediate owner. But if a known target is required, this can be overridden to\naccess the required target more quickly.</p>\n\n\n<p>Example:</p>\n\n\n<pre><code>Ext.override(<a href=\"#!/api/Ext.form.Field\" rel=\"Ext.form.Field\" class=\"docClass\">Ext.form.Field</a>, {\n    //  Add functionality to Field&#39;s initComponent to enable the change event to bubble\n    initComponent : Ext.form.Field.prototype.initComponent.createSequence(function() {\n        this.enableBubble('change');\n    }),\n\n    //  We know that we want Field&#39;s events to bubble directly to the FormPanel.\n    getBubbleTarget : function() {\n        if (!this.formPanel) {\n            this.formPanel = this.findParentByType('form');\n        }\n        return this.formPanel;\n    }\n});\n\nvar myForm = new Ext.formPanel({\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>events</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/Array<div class='sub-desc'><p>The event name to bubble, or an Array of event names.</p>\n</div></li></ul></div></div></div><div id='method-relayEvents' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Observable'>Ext.util.Observable</span><br/><a href='source/Observable-more.html#Ext-util-Observable-method-relayEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-method-relayEvents' class='name expandable'>relayEvents</a>( <span class='pre'>o, events</span> )</div><div class='description'><div class='short'>Relays selected events from the specified Observable as if the events were fired by this. ...</div><div class='long'><p>Relays selected events from the specified Observable as if the events were fired by <tt><b>this</b></tt>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object<div class='sub-desc'><p>The Observable whose events this object is to relay.</p>\n</div></li><li><span class='pre'>events</span> : Array<div class='sub-desc'><p>Array of event names to relay.</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='static-method-capture' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Observable'>Ext.util.Observable</span><br/><a href='source/Observable-more.html#Ext-util-Observable-static-method-capture' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-static-method-capture' class='name expandable'>capture</a>( <span class='pre'>o, fn, [scope]</span> )<strong class='static signature' >static</strong></div><div class='description'><div class='short'>Starts capture on the specified Observable. ...</div><div class='long'><p>Starts capture on the specified Observable. All events will be passed\nto the supplied function with the event name + standard signature of the event\n<b>before</b> the event is fired. If the supplied function returns false,\nthe event will not fire.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Observable<div class='sub-desc'><p>The Observable to capture events from.</p>\n</div></li><li><span class='pre'>fn</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The function to call when an event is fired.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<code>this</code> reference) in which the function is executed. Defaults to the Observable firing the event.</p>\n</div></li></ul></div></div></div><div id='static-method-observeClass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.util.Observable'>Ext.util.Observable</span><br/><a href='source/Observable-more.html#Ext-util-Observable-static-method-observeClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.util.Observable-static-method-observeClass' class='name expandable'>observeClass</a>( <span class='pre'>c, listeners</span> )<strong class='static signature' >static</strong></div><div class='description'><div class='short'>Sets observability on the passed class constructor. ...</div><div class='long'><p>Sets observability on the passed class constructor.<p></p>\n\n<p>This makes any event fired on any instance of the passed class also fire a single event through\nthe <i>class</i> allowing for central handling of events on many instances at once.</p>\n\n\n<p>Usage:</p>\n\n\n<pre><code><a href=\"#!/api/Ext.util.Observable-static-method-observeClass\" rel=\"Ext.util.Observable-static-method-observeClass\" class=\"docClass\">Ext.util.Observable.observeClass</a>(Ext.data.Connection);\nExt.data.Connection.on('beforerequest', function(con, options) {\n    console.log('Ajax request made to ' + options.url);\n});</code></pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The class constructor to make observable.</p>\n</div></li><li><span class='pre'>listeners</span> : Object<div class='sub-desc'><p>An object containing a series of listeners to add. See addListener.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{},"linenr":7,"inheritable":null,"singleton":false,"html_meta":{},"subclasses":["Ext.Component","Ext.History","Ext.Resizable","Ext.SplitBar","Ext.Updater","Ext.data.DataProxy","Ext.data.Node","Ext.data.Store","Ext.data.Tree","Ext.dd.DragTracker","Ext.form.BasicForm","Ext.grid.AbstractSelectionModel","Ext.grid.Column","Ext.grid.ColumnModel","Ext.grid.GridView","Ext.grid.PropertyStore","Ext.list.ColumnResizer","Ext.list.Sorter","Ext.state.Provider","Ext.tree.DefaultSelectionModel","Ext.tree.MultiSelectionModel","Ext.tree.TreeLoader","Ext.util.ClickRepeater","Ext.util.MixedCollection"],"mixins":[],"aliases":{},"members":{"cfg":[],"property":[],"css_mixin":[],"method":[{"meta":{},"owner":"Ext.util.Observable","name":"enableBubble","id":"method-enableBubble","tagname":"method"},{"meta":{},"owner":"Ext.util.Observable","name":"relayEvents","id":"method-relayEvents","tagname":"method"}],"event":[],"css_var":[]},"alternateClassNames":[],"override":null,"component":false,"statics":{"cfg":[],"property":[],"css_mixin":[],"method":[{"meta":{"static":true},"owner":"Ext.util.Observable","name":"capture","id":"static-method-capture","tagname":"method"},{"meta":{"static":true},"owner":"Ext.util.Observable","name":"observeClass","id":"static-method-observeClass","tagname":"method"}],"event":[],"css_var":[]},"inheritdoc":null,"private":null,"superclasses":[],"files":[{"href":"Observable-more.html#Ext-util-Observable","filename":"Observable-more.js"}],"name":"Ext.util.Observable","uses":[],"mixedInto":[],"id":"class-Ext.util.Observable","tagname":"class","requires":[],"enum":null});